<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd"
       default-lazy-init="true">
  <!--  注册bean-->
    <bean id="userServiceImpl" class="org.example.api.service.impl.UserServiceImpl"/>
    <bean id="logAspect" class=" org.example.api.config.LogAspect"/>

    <!--使用Aspectj实现切面，使用Spring AOP进行配置-->
    <aop:config>
        <!--配置切面-->
        <!--注入切面bean-->
        <aop:aspect ref="logAspect">
            <!--定义Pointcut：通过expression表达式，来查找 特定的方法(pointcut)-->
            <aop:pointcut id="pointcut"
                          expression="execution(* org.example.api.service.impl.UserServiceImpl.deleteUser(..))"/>
            <!--配置"前置通知"-->
            <aop:before method="beforeDeleteUser"
                        pointcut-ref="pointcut"/>
            <aop:around method="aroundDeleteUser"
                        pointcut-ref="pointcut"/>
            <!--配置“后置通知”-->
            <aop:after method="afterDeleteUser"
                       pointcut-ref="pointcut"/>
            <!--returning属性：配置当前方法中用来接收返回值的参数名-->
            <aop:after-returning method="afterReturnAddUser" returning="userName"
                                 pointcut="execution(* org.example.api.service.impl.UserServiceImpl.addUser(..))"/>
            <!--配置“异常通知”-->
            <!--throwing属性：配置当前方法中用来接收当前异常的参数名-->
            <aop:after-throwing method="afterThrowingDeleteUser" throwing="ex"
                       pointcut-ref="pointcut"/>


        </aop:aspect>
    </aop:config>
</beans>